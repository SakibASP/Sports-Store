@model SportsStore.Models.ShippingDetails

@{
    ViewBag.Title = "SportsStore: Checkout";
}

<h2>Checkout Now</h2>
<p>Please enter your details, and we'll ship your goods right away!</p>

@using (Html.BeginForm())
{
    @Html.ValidationSummary()
    @Html.HiddenFor(x=>x.CREATE_BY)
    @Html.HiddenFor(x=>x.CREATE_DATE)
    <h3>Ship to</h3>
    <div class="form-group">
        <label>Name:</label>
        @Html.TextBoxFor(x => x.NAME, new { @class = " form-control " })
    </div>

    <h3>Address</h3>

    @*<div class="form-group">
        <label>Line 1:</label>
        @Html.TextBoxFor(x => x.Line1, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>Line 2:</label>
        @Html.TextBoxFor(x => x.Line2, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>Line 3:</label>
        @Html.TextBoxFor(x => x.Line3, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>City:</label>
        @Html.TextBoxFor(x => x.City, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>State:</label>
        @Html.TextBoxFor(x => x.State, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>Zip:</label>
        @Html.TextBoxFor(x => x.Zip, new { @class = " form-control " })
    </div>
    <div class="form-group">
        <label>Country:</label>
        @Html.TextBoxFor(x => x.Country, new { @class = " form-control " })
    </div>*@

    foreach ( var property in ViewData.ModelMetadata.Properties)
                {
        if (property.PropertyName != "NAME" && property.PropertyName != "GIFTWRAP" && property.PropertyName != "AUTO_ID" && property.PropertyName != "IsConfirmed" && property.PropertyName != "CREATE_BY" && property.PropertyName != "CREATE_DATE" && property.PropertyName != "CONFIRM_BY" && property.PropertyName != "CONFIRM_DATE")
                    {
                        <div class="form-group">
                            <label>@(property.DisplayName ?? property.PropertyName)</label>
                            @Html.TextBox(property.PropertyName, null, new {@class = " form-control "})
                        </div>                          
                    }
                }

    <h3>Options</h3>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(x=>x.GIFTWRAP, htmlAttributes: new {  @class="form-check-input" })
            Gift wrap this items
        </label>
    </div>

    <div class="text-center">
        <input class="btn btn-primary" type="submit" value="Complete order" id="COrder" />
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $("#COrder").click(function (event) {
            var EmptyStatus = "@ViewBag.EmptyCart";

            //alert(EmptyStatus);
            var IsEmpty = EmptyStatus == "True" ? true : false;
            if(IsEmpty){
                alert("Sorry! Your cart is empty");
                event.preventDefault();
            }
        });
    </script>
}